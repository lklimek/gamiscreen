name: Release Binaries

on:
  release:
    types: [published]
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build-client-linux-x86_64:
    name: Build gamiscreen-client (linux x86_64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libdbus-1-dev libsqlite3-dev

      - name: Build client
        env:
          SKIP_WEB_BUILD: "1"
        run: |
          cargo build --release -p gamiscreen-client
          cp target/release/gamiscreen-client gamiscreen-client-linux-x86_64
          sha256sum gamiscreen-client-linux-x86_64 | awk '{print $1}' > gamiscreen-client-linux-x86_64.sha256

      - name: Upload release assets
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            gamiscreen-client-linux-x86_64
            gamiscreen-client-linux-x86_64.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts (manual runs)
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: gamiscreen-client-linux-x86_64
          path: |
            gamiscreen-client-linux-x86_64
            gamiscreen-client-linux-x86_64.sha256

  build-server-linux-x86_64:
    name: Build gamiscreen-server (linux x86_64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Node (for web embedding)
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: gamiscreen-web/package-lock.json

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libsqlite3-dev

      - name: Build server
        env:
          # Allow build.rs to run npm to embed web UI
          SKIP_WEB_BUILD: "0"
        run: |
          cargo build --release -p gamiscreen-server
          cp target/release/gamiscreen-server gamiscreen-server-linux-x86_64
          sha256sum gamiscreen-server-linux-x86_64 | awk '{print $1}' > gamiscreen-server-linux-x86_64.sha256

      - name: Upload release assets
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            gamiscreen-server-linux-x86_64
            gamiscreen-server-linux-x86_64.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts (manual runs)
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: gamiscreen-server-linux-x86_64
          path: |
            gamiscreen-server-linux-x86_64
            gamiscreen-server-linux-x86_64.sha256
